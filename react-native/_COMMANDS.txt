react-native init AppName
react-native run-android / reactive-native run-ios

npm install -g react-native-git-upgrade
react-native-git-upgrade

npm install --save react-redux redux
npm install --save redux-thunk

### WARNING !!! ####################
Run in CommandLine As Administrator!
####################################

-----------------------------------------
Alternar ReBuilds e Syncs do Gradle com 
Builds do ReactNative na linha de comando
-----------------------------------------

build.gradle 
buildscript {
    repositories {
        jcenter()
        google()
    }
}


------------------- http://localhost:8081/debugger-ui/ ---------------------

							#===============#
							|	DEBUGGER	|
							|	Ctrl M      |
							#===============#

#===========================================================================
Permissions in Android Manifest
#---------------------------------------------------------------------------
<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
<uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" /> 
<!-- Include required permissions for Google Maps API to run. -->
<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
#===========================================================================


"C:\Program Files\Java\jre1.8.0_161\bin\keytool" -genkey -v -keystore [my-release-key].keystore -alias [my-key-alias] -keyalg RSA -keysize 2048 -validity 10000

Place the my-release-key.keystore file under the android/app directory in your project folder.

Edit the file ~/.gradle/gradle.properties or android/gradle.properties and add the following (replace ***** with the correct keystore password, alias and key password),

MYAPP_RELEASE_STORE_FILE=my-release-key.keystore
MYAPP_RELEASE_KEY_ALIAS=my-key-alias
MYAPP_RELEASE_STORE_PASSWORD=*****
MYAPP_RELEASE_KEY_PASSWORD=*****

Edit the file android/app/build.gradle in your project folder and add the signing config,

Note: Make sure gradle.properties does not include org.gradle.configureondemand=true as that will make release build skip bundling JS and assets into the APK.

		#===========================================================================#
		|	Move your signingConfigs block to appear before your buildTypes block	|
		|	You need to define the configuration before you can use it.				|
		#===========================================================================#
...
android {
    ...
    defaultConfig { ... }
    signingConfigs {
        release {
            if (project.hasProperty('MYAPP_RELEASE_STORE_FILE')) {
                storeFile file(MYAPP_RELEASE_STORE_FILE)
                storePassword MYAPP_RELEASE_STORE_PASSWORD
                keyAlias MYAPP_RELEASE_KEY_ALIAS
                keyPassword MYAPP_RELEASE_KEY_PASSWORD
            }
        }
    }
    buildTypes {
        release {
            ...
            signingConfig signingConfigs.release
        }
    }
}
...

The generated APK can be found under android/app/build/outputs/apk/app-release.apk, and is ready to be distributed.
